{"ast":null,"code":"var _jsxFileName = \"/Users/kilianreichl/RBDev/rankboxd/src/components/RankingProcess.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef, useMemo } from 'react';\nimport './RankingProcess.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RankingProcess({\n  movies,\n  rankings,\n  comparisons,\n  maxComparisons,\n  calculateConfidence,\n  onChoose,\n  onFinish,\n  onUndo\n}) {\n  _s();\n  const [pair, setPair] = useState([]);\n  const [moviesUsed, setMoviesUsed] = useState(new Set());\n  const [error, setError] = useState(null);\n  const moviesRef = useRef(movies);\n  const calculateUncertainty = useCallback(movieId => {\n    const results = rankings[movieId].recentResults;\n    if (results.length < 2) return 1;\n    const flips = results.reduce((count, curr, i) => {\n      return count + (i > 0 && curr !== results[i - 1] ? 1 : 0);\n    }, 0);\n    return flips / (results.length - 1);\n  }, [rankings]);\n  const calculatePairValue = useCallback((movieA, movieB, rankings, moviesUsed) => {\n    // Core information gain calculation\n    const ratingDiff = Math.abs(rankings[movieA.identifier].rating - rankings[movieB.identifier].rating);\n    const combinedComparisons = rankings[movieA.identifier].comparisons + rankings[movieB.identifier].comparisons;\n    const uncertaintyScore = (calculateUncertainty(movieA.identifier) + calculateUncertainty(movieB.identifier)) / 2;\n\n    // Base information gain\n    const infoGain = 1 / (ratingDiff + 0.1) * (1 / (combinedComparisons + 1)) * (1 + uncertaintyScore);\n\n    // Add usage penalty for recently used movies\n    const usageA = moviesUsed.has(movieA.identifier) ? 0.7 : 1;\n    const usageB = moviesUsed.has(movieB.identifier) ? 0.7 : 1;\n    return infoGain * usageA * usageB;\n  }, [calculateUncertainty]);\n  const memoizedMovies = useMemo(() => moviesRef.current, []);\n  const selectPair = useCallback(() => {\n    try {\n      if (comparisons >= maxComparisons) {\n        console.log(\"Finishing ranking process\");\n        onFinish();\n        return;\n      }\n\n      // Get available movies, refreshing the pool if needed\n      let availableMovies = memoizedMovies.filter(movie => !moviesUsed.has(movie.identifier));\n      if (availableMovies.length < 2) {\n        console.log(\"Resetting movies used pool\");\n        availableMovies = [...moviesRef.current];\n        setMoviesUsed(new Set());\n      }\n\n      // Early stage detection\n      const ratingsArray = availableMovies.map(movie => rankings[movie.identifier].rating);\n      const ratingRange = Math.max(...ratingsArray) - Math.min(...ratingsArray);\n      const isEarlyStage = ratingRange < 1.0 || comparisons < movies.length;\n      let selectedPair;\n      if (isEarlyStage) {\n        console.log(\"Early stage selection\");\n        // In early stage, prioritize establishing baseline rankings\n        const sortedByComparisons = [...availableMovies].sort((a, b) => rankings[a.identifier].comparisons - rankings[b.identifier].comparisons);\n\n        // Select first movie with fewest comparisons\n        const firstMovie = sortedByComparisons[0];\n\n        // Find best matching second movie\n        const otherMovies = sortedByComparisons.slice(1, 10); // Limit to 10 candidates for efficiency\n        const secondMovie = otherMovies.reduce((best, current) => {\n          const currentValue = calculatePairValue(firstMovie, current, rankings, moviesUsed);\n          const bestValue = best ? calculatePairValue(firstMovie, best, rankings, moviesUsed) : -1;\n          return currentValue > bestValue ? current : best;\n        });\n        selectedPair = [firstMovie, secondMovie];\n      } else {\n        console.log(\"Refinement stage selection\");\n        // In refinement stage, use sophisticated pair selection\n        const potentialPairs = [];\n\n        // Consider top 10 movies for efficiency\n        const candidateMovies = availableMovies.slice(0, 10);\n\n        // Generate all possible pairs among candidates\n        for (let i = 0; i < candidateMovies.length - 1; i++) {\n          for (let j = i + 1; j < candidateMovies.length; j++) {\n            const movieA = candidateMovies[i];\n            const movieB = candidateMovies[j];\n            const pairValue = calculatePairValue(movieA, movieB, rankings, moviesUsed);\n            potentialPairs.push({\n              pair: [movieA, movieB],\n              value: pairValue\n            });\n          }\n        }\n\n        // Select highest value pair\n        potentialPairs.sort((a, b) => b.value - a.value);\n        selectedPair = potentialPairs[0].pair;\n      }\n      console.log(`Selected pair: ${selectedPair[0].title} vs ${selectedPair[1].title}`);\n      setPair(selectedPair);\n      setMoviesUsed(prev => new Set([...prev, selectedPair[0].identifier, selectedPair[1].identifier]));\n    } catch (err) {\n      console.error(\"Error in selectPair:\", err);\n      setError(`Error selecting movies: ${err.message}`);\n    }\n  }, [comparisons, maxComparisons, moviesUsed, rankings, movies.length, onFinish, calculatePairValue, memoizedMovies]);\n  const handleChoice = useCallback((winner, loser) => {\n    console.log(`Choice made: ${winner.title} over ${loser.title}`);\n    setPair([]); // This will trigger useEffect to select new pair\n    onChoose(winner.identifier, loser.identifier);\n  }, [onChoose]);\n  useEffect(() => {\n    const handleKeyPress = e => {\n      if (!pair.length) return;\n      if (e.key === 'ArrowLeft' || e.key === '1') {\n        handleChoice(pair[0], pair[1]);\n      } else if (e.key === 'ArrowRight' || e.key === '2') {\n        handleChoice(pair[1], pair[0]);\n      } else if (e.key.toLowerCase() === 'u' && comparisons > 0) {\n        onUndo();\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [pair, comparisons, onUndo, handleChoice, onChoose]);\n  useEffect(() => {\n    // Only select a new pair if we don't have one already\n    if (pair.length === 0 && comparisons < maxComparisons) {\n      selectPair();\n    }\n  }, [pair.length, comparisons, maxComparisons, selectPair]);\n\n  // Create a map to count occurrences of each title\n  const titleCounts = useMemo(() => {\n    return movies.reduce((acc, movie) => {\n      acc[movie.title] = (acc[movie.title] || 0) + 1;\n      return acc;\n    }, {});\n  }, [movies]);\n  const formatMovieTitle = movie => {\n    if (!movie || !movie.title) {\n      return \"Unknown\";\n    }\n    // Only include year if there are duplicate titles\n    if (titleCounts[movie.title] > 1) {\n      return `${movie.title} (${movie.year})`;\n    }\n    return movie.title;\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 12\n    }, this);\n  }\n  if (comparisons >= maxComparisons) {\n    onFinish();\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Which movie do you prefer?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onUndo,\n      className: \"undo-button\",\n      disabled: comparisons === 0,\n      children: \"Undo Last Choice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard-instructions\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Keyboard controls:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Press \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 21\n          }, this), \" or \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u2190\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 43\n          }, this), \" to select left movie\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Press \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 21\n          }, this), \" or \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 43\n          }, this), \" to select right movie\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Press \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"U\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 21\n          }, this), \" to undo last choice\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), pair.length === 2 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-comparison\",\n      children: pair.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-option\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"movie-button\",\n          onClick: () => handleChoice(movie, pair[1 - index]),\n          children: formatMovieTitle(movie)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)\n      }, movie.identifier, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading next pair...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}\n_s(RankingProcess, \"JfbACx5///dUxDK56teAKTXf88M=\");\n_c = RankingProcess;\nexport default RankingProcess;\nvar _c;\n$RefreshReg$(_c, \"RankingProcess\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","useMemo","jsxDEV","_jsxDEV","RankingProcess","movies","rankings","comparisons","maxComparisons","calculateConfidence","onChoose","onFinish","onUndo","_s","pair","setPair","moviesUsed","setMoviesUsed","Set","error","setError","moviesRef","calculateUncertainty","movieId","results","recentResults","length","flips","reduce","count","curr","i","calculatePairValue","movieA","movieB","ratingDiff","Math","abs","identifier","rating","combinedComparisons","uncertaintyScore","infoGain","usageA","has","usageB","memoizedMovies","current","selectPair","console","log","availableMovies","filter","movie","ratingsArray","map","ratingRange","max","min","isEarlyStage","selectedPair","sortedByComparisons","sort","a","b","firstMovie","otherMovies","slice","secondMovie","best","currentValue","bestValue","potentialPairs","candidateMovies","j","pairValue","push","value","title","prev","err","message","handleChoice","winner","loser","handleKeyPress","e","key","toLowerCase","window","addEventListener","removeEventListener","titleCounts","acc","formatMovieTitle","year","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","disabled","index","_c","$RefreshReg$"],"sources":["/Users/kilianreichl/RBDev/rankboxd/src/components/RankingProcess.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef, useMemo } from 'react';\nimport './RankingProcess.css';\n\nfunction RankingProcess({ \n  movies, \n  rankings, \n  comparisons,\n  maxComparisons,\n  calculateConfidence,\n  onChoose, \n  onFinish, \n  onUndo\n}) {\n  const [pair, setPair] = useState([]);\n  const [moviesUsed, setMoviesUsed] = useState(new Set());\n  const [error, setError] = useState(null);\n\n  const moviesRef = useRef(movies);\n\n  const calculateUncertainty = useCallback((movieId) => {\n    const results = rankings[movieId].recentResults;\n    if (results.length < 2) return 1;\n    const flips = results.reduce((count, curr, i) => {\n      return count + (i > 0 && curr !== results[i-1] ? 1 : 0);\n    }, 0);\n    return flips / (results.length - 1);\n  }, [rankings]);\n  \n  const calculatePairValue = useCallback((movieA, movieB, rankings, moviesUsed) => {\n    // Core information gain calculation\n    const ratingDiff = Math.abs(\n      rankings[movieA.identifier].rating - rankings[movieB.identifier].rating\n    );\n    const combinedComparisons = rankings[movieA.identifier].comparisons + \n                               rankings[movieB.identifier].comparisons;\n    const uncertaintyScore = (calculateUncertainty(movieA.identifier) + \n                            calculateUncertainty(movieB.identifier)) / 2;\n    \n    // Base information gain\n    const infoGain = (1 / (ratingDiff + 0.1)) * \n                     (1 / (combinedComparisons + 1)) * \n                     (1 + uncertaintyScore);\n    \n    // Add usage penalty for recently used movies\n    const usageA = moviesUsed.has(movieA.identifier) ? 0.7 : 1;\n    const usageB = moviesUsed.has(movieB.identifier) ? 0.7 : 1;\n    \n    return infoGain * usageA * usageB;\n  }, [calculateUncertainty]);\n\n  const memoizedMovies = useMemo(() => moviesRef.current, []);\n  \n  const selectPair = useCallback(() => {\n    try {\n      if (comparisons >= maxComparisons) {\n        console.log(\"Finishing ranking process\");\n        onFinish();\n        return;\n      }\n  \n      // Get available movies, refreshing the pool if needed\n      let availableMovies = memoizedMovies.filter(movie => \n        !moviesUsed.has(movie.identifier)\n      );\n  \n      if (availableMovies.length < 2) {\n        console.log(\"Resetting movies used pool\");\n        availableMovies = [...moviesRef.current];\n        setMoviesUsed(new Set());\n      }\n  \n      // Early stage detection\n      const ratingsArray = availableMovies.map(movie => rankings[movie.identifier].rating);\n      const ratingRange = Math.max(...ratingsArray) - Math.min(...ratingsArray);\n      const isEarlyStage = ratingRange < 1.0 || comparisons < movies.length;\n  \n      let selectedPair;\n  \n      if (isEarlyStage) {\n        console.log(\"Early stage selection\");\n        // In early stage, prioritize establishing baseline rankings\n        const sortedByComparisons = [...availableMovies].sort((a, b) => \n          rankings[a.identifier].comparisons - rankings[b.identifier].comparisons\n        );\n  \n        // Select first movie with fewest comparisons\n        const firstMovie = sortedByComparisons[0];\n        \n        // Find best matching second movie\n        const otherMovies = sortedByComparisons.slice(1, 10); // Limit to 10 candidates for efficiency\n        const secondMovie = otherMovies.reduce((best, current) => {\n          const currentValue = calculatePairValue(firstMovie, current, rankings, moviesUsed);\n          const bestValue = best ? calculatePairValue(firstMovie, best, rankings, moviesUsed) : -1;\n          return currentValue > bestValue ? current : best;\n        });\n  \n        selectedPair = [firstMovie, secondMovie];\n      } else {\n        console.log(\"Refinement stage selection\");\n        // In refinement stage, use sophisticated pair selection\n        const potentialPairs = [];\n        \n        // Consider top 10 movies for efficiency\n        const candidateMovies = availableMovies.slice(0, 10);\n        \n        // Generate all possible pairs among candidates\n        for (let i = 0; i < candidateMovies.length - 1; i++) {\n          for (let j = i + 1; j < candidateMovies.length; j++) {\n            const movieA = candidateMovies[i];\n            const movieB = candidateMovies[j];\n            \n            const pairValue = calculatePairValue(movieA, movieB, rankings, moviesUsed);\n            \n            potentialPairs.push({\n              pair: [movieA, movieB],\n              value: pairValue\n            });\n          }\n        }\n  \n        // Select highest value pair\n        potentialPairs.sort((a, b) => b.value - a.value);\n        selectedPair = potentialPairs[0].pair;\n      }\n  \n      console.log(`Selected pair: ${selectedPair[0].title} vs ${selectedPair[1].title}`);\n      setPair(selectedPair);\n      setMoviesUsed(prev => new Set([...prev, selectedPair[0].identifier, selectedPair[1].identifier]));\n  \n    } catch (err) {\n      console.error(\"Error in selectPair:\", err);\n      setError(`Error selecting movies: ${err.message}`);\n    }\n  }, [\n    comparisons, \n    maxComparisons, \n    moviesUsed, \n    rankings, \n    movies.length, \n    onFinish,\n    calculatePairValue,\n    memoizedMovies\n  ]);\n\n    const handleChoice = useCallback((winner, loser) => {\n      console.log(`Choice made: ${winner.title} over ${loser.title}`);\n      setPair([]); // This will trigger useEffect to select new pair\n      onChoose(winner.identifier, loser.identifier);\n    }, [onChoose]);\n\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      if (!pair.length) return;\n      \n      if (e.key === 'ArrowLeft' || e.key === '1') {\n        handleChoice(pair[0], pair[1]);\n      } else if (e.key === 'ArrowRight' || e.key === '2') {\n        handleChoice(pair[1], pair[0]);\n      } else if (e.key.toLowerCase() === 'u' && comparisons > 0) {\n        onUndo();\n      }\n    };\n  \n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [pair, comparisons, onUndo, handleChoice, onChoose]);\n\n  useEffect(() => {\n    // Only select a new pair if we don't have one already\n    if (pair.length === 0 && comparisons < maxComparisons) {\n      selectPair();\n    }\n  }, [pair.length, comparisons, maxComparisons, selectPair]);\n\n  // Create a map to count occurrences of each title\n  const titleCounts = useMemo(() => {\n    return movies.reduce((acc, movie) => {\n      acc[movie.title] = (acc[movie.title] || 0) + 1;\n      return acc;\n    }, {});\n  }, [movies]);\n\n  const formatMovieTitle = (movie) => {\n    if (!movie || !movie.title) {\n      return \"Unknown\";\n    }\n    // Only include year if there are duplicate titles\n    if (titleCounts[movie.title] > 1) {\n      return `${movie.title} (${movie.year})`;\n    }\n    return movie.title;\n  };\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  if (comparisons >= maxComparisons) {\n    onFinish();\n    return null;\n  }\n\n  return (\n    <div>\n      <h2>Which movie do you prefer?</h2>\n      <button \n        onClick={onUndo}\n        className=\"undo-button\"\n        disabled={comparisons === 0}\n      >\n        Undo Last Choice\n      </button>\n      <div className=\"keyboard-instructions\">\n        <p>Keyboard controls:</p>\n        <ul>\n          <li>Press <strong>1</strong> or <strong>←</strong> to select left movie</li>\n          <li>Press <strong>2</strong> or <strong>→</strong> to select right movie</li>\n          <li>Press <strong>U</strong> to undo last choice</li>\n        </ul>\n      </div>\n      {pair.length === 2 ? (\n        <div className=\"movie-comparison\">\n        {pair.map((movie, index) => (\n          <div key={movie.identifier} className=\"movie-option\">\n            <button \n              className=\"movie-button\"\n              onClick={() => handleChoice(movie, pair[1 - index])}\n            >\n              {formatMovieTitle(movie)}\n            </button>\n          </div>\n        ))}\n      </div>\n      ) : (\n        <p>Loading next pair...</p>\n      )}\n    </div>\n  );\n}\n\nexport default RankingProcess;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}