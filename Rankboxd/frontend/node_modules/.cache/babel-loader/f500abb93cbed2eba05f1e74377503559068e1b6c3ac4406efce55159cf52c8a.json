{"ast":null,"code":"var _jsxFileName = \"/Users/kilianreichl/RBDev/rankboxd/src/components/ModeSelection.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { Timer, Zap, Target } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RANKING_CONSTANTS = {\n  QUICK_MULTIPLIER: 1.5,\n  BALANCED_MULTIPLIER: 3,\n  THOROUGH_MULTIPLIER: 5,\n  MIN_QUICK_COMPARISONS: 20,\n  MIN_BALANCED_COMPARISONS: 30,\n  MIN_THOROUGH_COMPARISONS: 40,\n  MAX_BALANCED_COMPARISONS: 1500,\n  MAX_THOROUGH_COMPARISONS: 2000\n};\nconst ModeOption = ({\n  title,\n  description,\n  comparisons,\n  time,\n  icon: Icon,\n  onClick\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: onClick,\n  className: \"relative w-full group overflow-hidden rounded-lg border border-base-content/10 bg-base-200 p-6 transition-all hover:border-primary/50 hover:-translate-y-1 hover:shadow-lg hover:shadow-primary/5\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"absolute inset-0 bg-gradient-to-br from-primary/5 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative space-y-4 w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center gap-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-2 rounded-md bg-base-300 text-primary group-hover:bg-primary group-hover:text-primary-content transition-colors\",\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          className: \"w-5 h-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm text-base-content/70\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-2 flex items-center justify-between text-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2 text-base-content/60\",\n        children: [/*#__PURE__*/_jsxDEV(Timer, {\n          className: \"w-4 h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"~\", time, \" min\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-2 py-1 rounded bg-base-300 text-xs font-medium\",\n        children: [comparisons, \" comparisons\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 5\n}, this);\n_c = ModeOption;\nconst ModeSelection = ({\n  movies,\n  onModeSelect\n}) => {\n  _s();\n  const getEstimatedTime = comparisons => Math.ceil(comparisons * 0.1);\n  const modeOptions = useMemo(() => {\n    const calculateOptions = movieCount => {\n      // Quick mode - less accurate but faster\n      const quickComparisons = Math.max(Math.ceil(movieCount * RANKING_CONSTANTS.QUICK_MULTIPLIER), RANKING_CONSTANTS.MIN_QUICK_COMPARISONS);\n\n      // Balanced mode - good balance between accuracy and time\n      const baseComparisons = movieCount * RANKING_CONSTANTS.BALANCED_MULTIPLIER;\n      const extraComparisons = Math.ceil(movieCount * Math.log2(movieCount));\n      const balancedComparisons = Math.min(Math.max(baseComparisons + extraComparisons, RANKING_CONSTANTS.MIN_BALANCED_COMPARISONS), RANKING_CONSTANTS.MAX_BALANCED_COMPARISONS);\n\n      // Thorough mode - highest accuracy\n      const thoroughComparisons = Math.min(Math.max(movieCount * RANKING_CONSTANTS.THOROUGH_MULTIPLIER + extraComparisons, RANKING_CONSTANTS.MIN_THOROUGH_COMPARISONS), RANKING_CONSTANTS.MAX_THOROUGH_COMPARISONS);\n      return {\n        quick: quickComparisons,\n        balanced: balancedComparisons,\n        thorough: thoroughComparisons\n      };\n    };\n    const options = calculateOptions(movies.length);\n    return [{\n      id: 'quick',\n      title: 'Quick Mode',\n      description: 'Get a rough ranking quickly. Best for casual sorting or when time is limited.',\n      comparisons: options.quick,\n      time: getEstimatedTime(options.quick),\n      icon: Zap\n    }, {\n      id: 'balanced',\n      title: 'Balanced Mode',\n      description: 'A good balance between accuracy and time investment. Recommended for most users.',\n      comparisons: options.balanced,\n      time: getEstimatedTime(options.balanced),\n      icon: Target\n    }, {\n      id: 'thorough',\n      title: 'Thorough Mode',\n      description: 'Maximum accuracy with more comparisons. Ideal for definitive rankings.',\n      comparisons: options.thorough,\n      time: getEstimatedTime(options.thorough),\n      icon: Timer\n    }];\n  }, [movies.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-5xl mx-auto p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-2\",\n        children: \"Choose Your Ranking Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-base-content/70\",\n        children: \"Select how thorough you want the ranking process to be\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid gap-4 md:grid-cols-2 lg:grid-cols-3\",\n      children: modeOptions.map(mode => /*#__PURE__*/_jsxDEV(ModeOption, {\n        ...mode,\n        onClick: () => onModeSelect(mode.id, mode.comparisons)\n      }, mode.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xs text-center mt-8 text-base-content/50\",\n      children: \"All modes will produce a complete ranking, but more comparisons generally lead to higher accuracy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(ModeSelection, \"MTAhMGtS++Lz8WQOr97j+AptYgE=\");\n_c2 = ModeSelection;\nexport default ModeSelection;\nvar _c, _c2;\n$RefreshReg$(_c, \"ModeOption\");\n$RefreshReg$(_c2, \"ModeSelection\");","map":{"version":3,"names":["React","useMemo","Timer","Zap","Target","jsxDEV","_jsxDEV","RANKING_CONSTANTS","QUICK_MULTIPLIER","BALANCED_MULTIPLIER","THOROUGH_MULTIPLIER","MIN_QUICK_COMPARISONS","MIN_BALANCED_COMPARISONS","MIN_THOROUGH_COMPARISONS","MAX_BALANCED_COMPARISONS","MAX_THOROUGH_COMPARISONS","ModeOption","title","description","comparisons","time","icon","Icon","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","ModeSelection","movies","onModeSelect","_s","getEstimatedTime","Math","ceil","modeOptions","calculateOptions","movieCount","quickComparisons","max","baseComparisons","extraComparisons","log2","balancedComparisons","min","thoroughComparisons","quick","balanced","thorough","options","length","id","map","mode","_c2","$RefreshReg$"],"sources":["/Users/kilianreichl/RBDev/rankboxd/src/components/ModeSelection.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { Timer, Zap, Target } from 'lucide-react';\n\nconst RANKING_CONSTANTS = {\n  QUICK_MULTIPLIER: 1.5,\n  BALANCED_MULTIPLIER: 3,\n  THOROUGH_MULTIPLIER: 5,\n  MIN_QUICK_COMPARISONS: 20,\n  MIN_BALANCED_COMPARISONS: 30,\n  MIN_THOROUGH_COMPARISONS: 40,\n  MAX_BALANCED_COMPARISONS: 1500,\n  MAX_THOROUGH_COMPARISONS: 2000\n};\n\nconst ModeOption = ({ title, description, comparisons, time, icon: Icon, onClick }) => (\n    <button\n      onClick={onClick}\n      className=\"relative w-full group overflow-hidden rounded-lg border border-base-content/10 bg-base-200 p-6 transition-all hover:border-primary/50 hover:-translate-y-1 hover:shadow-lg hover:shadow-primary/5\"\n    >\n    <div className=\"absolute inset-0 bg-gradient-to-br from-primary/5 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity\" />\n    \n    <div className=\"relative space-y-4 w-full\">\n      <div className=\"flex items-center gap-3\">\n        <div className=\"p-2 rounded-md bg-base-300 text-primary group-hover:bg-primary group-hover:text-primary-content transition-colors\">\n          <Icon className=\"w-5 h-5\" />\n        </div>\n        <h3 className=\"text-lg font-semibold\">{title}</h3>\n      </div>\n      \n      <p className=\"text-sm text-base-content/70\">{description}</p>\n      \n      <div className=\"pt-2 flex items-center justify-between text-sm\">\n        <div className=\"flex items-center gap-2 text-base-content/60\">\n          <Timer className=\"w-4 h-4\" />\n          <span>~{time} min</span>\n        </div>\n        <div className=\"px-2 py-1 rounded bg-base-300 text-xs font-medium\">\n          {comparisons} comparisons\n        </div>\n      </div>\n    </div>\n  </button>\n);\n\nconst ModeSelection = ({ movies, onModeSelect }) => {\n  const getEstimatedTime = (comparisons) => Math.ceil(comparisons * 0.1);\n\n  const modeOptions = useMemo(() => {\n    const calculateOptions = (movieCount) => {\n      // Quick mode - less accurate but faster\n      const quickComparisons = Math.max(\n        Math.ceil(movieCount * RANKING_CONSTANTS.QUICK_MULTIPLIER),\n        RANKING_CONSTANTS.MIN_QUICK_COMPARISONS\n      );\n      \n      // Balanced mode - good balance between accuracy and time\n      const baseComparisons = movieCount * RANKING_CONSTANTS.BALANCED_MULTIPLIER;\n      const extraComparisons = Math.ceil(movieCount * Math.log2(movieCount));\n      const balancedComparisons = Math.min(\n        Math.max(baseComparisons + extraComparisons, RANKING_CONSTANTS.MIN_BALANCED_COMPARISONS),\n        RANKING_CONSTANTS.MAX_BALANCED_COMPARISONS\n      );\n      \n      // Thorough mode - highest accuracy\n      const thoroughComparisons = Math.min(\n        Math.max(movieCount * RANKING_CONSTANTS.THOROUGH_MULTIPLIER + extraComparisons, RANKING_CONSTANTS.MIN_THOROUGH_COMPARISONS),\n        RANKING_CONSTANTS.MAX_THOROUGH_COMPARISONS\n      );\n\n      return {\n        quick: quickComparisons,\n        balanced: balancedComparisons,\n        thorough: thoroughComparisons\n      };\n    };\n\n    const options = calculateOptions(movies.length);\n\n    return [\n      {\n        id: 'quick',\n        title: 'Quick Mode',\n        description: 'Get a rough ranking quickly. Best for casual sorting or when time is limited.',\n        comparisons: options.quick,\n        time: getEstimatedTime(options.quick),\n        icon: Zap\n      },\n      {\n        id: 'balanced',\n        title: 'Balanced Mode',\n        description: 'A good balance between accuracy and time investment. Recommended for most users.',\n        comparisons: options.balanced,\n        time: getEstimatedTime(options.balanced),\n        icon: Target\n      },\n      {\n        id: 'thorough',\n        title: 'Thorough Mode',\n        description: 'Maximum accuracy with more comparisons. Ideal for definitive rankings.',\n        comparisons: options.thorough,\n        time: getEstimatedTime(options.thorough),\n        icon: Timer\n      }\n    ];\n  }, [movies.length]);\n\n  return (\n    <div className=\"max-w-5xl mx-auto p-6\">\n      <div className=\"text-center mb-8\">\n        <h2 className=\"text-2xl font-bold mb-2\">Choose Your Ranking Mode</h2>\n        <p className=\"text-base-content/70\">\n          Select how thorough you want the ranking process to be\n        </p>\n      </div>\n\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n        {modeOptions.map(mode => (\n          <ModeOption\n            key={mode.id}\n            {...mode}\n            onClick={() => onModeSelect(mode.id, mode.comparisons)}\n          />\n        ))}\n      </div>\n\n      <p className=\"text-xs text-center mt-8 text-base-content/50\">\n        All modes will produce a complete ranking, but more comparisons generally lead to higher accuracy\n      </p>\n    </div>\n  );\n};\n\nexport default ModeSelection;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,SAASC,KAAK,EAAEC,GAAG,EAAEC,MAAM,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,iBAAiB,GAAG;EACxBC,gBAAgB,EAAE,GAAG;EACrBC,mBAAmB,EAAE,CAAC;EACtBC,mBAAmB,EAAE,CAAC;EACtBC,qBAAqB,EAAE,EAAE;EACzBC,wBAAwB,EAAE,EAAE;EAC5BC,wBAAwB,EAAE,EAAE;EAC5BC,wBAAwB,EAAE,IAAI;EAC9BC,wBAAwB,EAAE;AAC5B,CAAC;AAED,MAAMC,UAAU,GAAGA,CAAC;EAAEC,KAAK;EAAEC,WAAW;EAAEC,WAAW;EAAEC,IAAI;EAAEC,IAAI,EAAEC,IAAI;EAAEC;AAAQ,CAAC,kBAC9EjB,OAAA;EACEiB,OAAO,EAAEA,OAAQ;EACjBC,SAAS,EAAC,mMAAmM;EAAAC,QAAA,gBAE/MnB,OAAA;IAAKkB,SAAS,EAAC;EAAuI;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eAEzJvB,OAAA;IAAKkB,SAAS,EAAC,2BAA2B;IAAAC,QAAA,gBACxCnB,OAAA;MAAKkB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBACtCnB,OAAA;QAAKkB,SAAS,EAAC,mHAAmH;QAAAC,QAAA,eAChInB,OAAA,CAACgB,IAAI;UAACE,SAAS,EAAC;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACNvB,OAAA;QAAIkB,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAER;MAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eAENvB,OAAA;MAAGkB,SAAS,EAAC,8BAA8B;MAAAC,QAAA,EAAEP;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE7DvB,OAAA;MAAKkB,SAAS,EAAC,gDAAgD;MAAAC,QAAA,gBAC7DnB,OAAA;QAAKkB,SAAS,EAAC,8CAA8C;QAAAC,QAAA,gBAC3DnB,OAAA,CAACJ,KAAK;UAACsB,SAAS,EAAC;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7BvB,OAAA;UAAAmB,QAAA,GAAM,GAAC,EAACL,IAAI,EAAC,MAAI;QAAA;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eACNvB,OAAA;QAAKkB,SAAS,EAAC,mDAAmD;QAAAC,QAAA,GAC/DN,WAAW,EAAC,cACf;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACA,CACT;AAACC,EAAA,GA5BId,UAAU;AA8BhB,MAAMe,aAAa,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAMC,gBAAgB,GAAIhB,WAAW,IAAKiB,IAAI,CAACC,IAAI,CAAClB,WAAW,GAAG,GAAG,CAAC;EAEtE,MAAMmB,WAAW,GAAGrC,OAAO,CAAC,MAAM;IAChC,MAAMsC,gBAAgB,GAAIC,UAAU,IAAK;MACvC;MACA,MAAMC,gBAAgB,GAAGL,IAAI,CAACM,GAAG,CAC/BN,IAAI,CAACC,IAAI,CAACG,UAAU,GAAGjC,iBAAiB,CAACC,gBAAgB,CAAC,EAC1DD,iBAAiB,CAACI,qBACpB,CAAC;;MAED;MACA,MAAMgC,eAAe,GAAGH,UAAU,GAAGjC,iBAAiB,CAACE,mBAAmB;MAC1E,MAAMmC,gBAAgB,GAAGR,IAAI,CAACC,IAAI,CAACG,UAAU,GAAGJ,IAAI,CAACS,IAAI,CAACL,UAAU,CAAC,CAAC;MACtE,MAAMM,mBAAmB,GAAGV,IAAI,CAACW,GAAG,CAClCX,IAAI,CAACM,GAAG,CAACC,eAAe,GAAGC,gBAAgB,EAAErC,iBAAiB,CAACK,wBAAwB,CAAC,EACxFL,iBAAiB,CAACO,wBACpB,CAAC;;MAED;MACA,MAAMkC,mBAAmB,GAAGZ,IAAI,CAACW,GAAG,CAClCX,IAAI,CAACM,GAAG,CAACF,UAAU,GAAGjC,iBAAiB,CAACG,mBAAmB,GAAGkC,gBAAgB,EAAErC,iBAAiB,CAACM,wBAAwB,CAAC,EAC3HN,iBAAiB,CAACQ,wBACpB,CAAC;MAED,OAAO;QACLkC,KAAK,EAAER,gBAAgB;QACvBS,QAAQ,EAAEJ,mBAAmB;QAC7BK,QAAQ,EAAEH;MACZ,CAAC;IACH,CAAC;IAED,MAAMI,OAAO,GAAGb,gBAAgB,CAACP,MAAM,CAACqB,MAAM,CAAC;IAE/C,OAAO,CACL;MACEC,EAAE,EAAE,OAAO;MACXrC,KAAK,EAAE,YAAY;MACnBC,WAAW,EAAE,+EAA+E;MAC5FC,WAAW,EAAEiC,OAAO,CAACH,KAAK;MAC1B7B,IAAI,EAAEe,gBAAgB,CAACiB,OAAO,CAACH,KAAK,CAAC;MACrC5B,IAAI,EAAElB;IACR,CAAC,EACD;MACEmD,EAAE,EAAE,UAAU;MACdrC,KAAK,EAAE,eAAe;MACtBC,WAAW,EAAE,kFAAkF;MAC/FC,WAAW,EAAEiC,OAAO,CAACF,QAAQ;MAC7B9B,IAAI,EAAEe,gBAAgB,CAACiB,OAAO,CAACF,QAAQ,CAAC;MACxC7B,IAAI,EAAEjB;IACR,CAAC,EACD;MACEkD,EAAE,EAAE,UAAU;MACdrC,KAAK,EAAE,eAAe;MACtBC,WAAW,EAAE,wEAAwE;MACrFC,WAAW,EAAEiC,OAAO,CAACD,QAAQ;MAC7B/B,IAAI,EAAEe,gBAAgB,CAACiB,OAAO,CAACD,QAAQ,CAAC;MACxC9B,IAAI,EAAEnB;IACR,CAAC,CACF;EACH,CAAC,EAAE,CAAC8B,MAAM,CAACqB,MAAM,CAAC,CAAC;EAEnB,oBACE/C,OAAA;IAAKkB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCnB,OAAA;MAAKkB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BnB,OAAA;QAAIkB,SAAS,EAAC,yBAAyB;QAAAC,QAAA,EAAC;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrEvB,OAAA;QAAGkB,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EAAC;MAEpC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAENvB,OAAA;MAAKkB,SAAS,EAAC,0CAA0C;MAAAC,QAAA,EACtDa,WAAW,CAACiB,GAAG,CAACC,IAAI,iBACnBlD,OAAA,CAACU,UAAU;QAAA,GAELwC,IAAI;QACRjC,OAAO,EAAEA,CAAA,KAAMU,YAAY,CAACuB,IAAI,CAACF,EAAE,EAAEE,IAAI,CAACrC,WAAW;MAAE,GAFlDqC,IAAI,CAACF,EAAE;QAAA5B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGb,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENvB,OAAA;MAAGkB,SAAS,EAAC,+CAA+C;MAAAC,QAAA,EAAC;IAE7D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAACK,EAAA,CAtFIH,aAAa;AAAA0B,GAAA,GAAb1B,aAAa;AAwFnB,eAAeA,aAAa;AAAC,IAAAD,EAAA,EAAA2B,GAAA;AAAAC,YAAA,CAAA5B,EAAA;AAAA4B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}