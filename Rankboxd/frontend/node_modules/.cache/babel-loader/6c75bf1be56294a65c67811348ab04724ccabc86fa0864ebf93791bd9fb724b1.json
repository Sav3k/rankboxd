{"ast":null,"code":"var _jsxFileName = \"/Users/kilianreichl/RBDev/rankboxd/src/components/ProgressBar.js\";\nimport React from 'react';\nimport './ProgressBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = ({\n  currentStep\n}) => {\n  const steps = [{\n    key: 'input',\n    label: 'Input List'\n  }, {\n    key: 'mode-selection',\n    label: 'Select Mode'\n  }, {\n    key: 'ranking',\n    label: 'Rank Movies'\n  }, {\n    key: 'results',\n    label: 'Results'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress-navigation\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: steps.map((step, index) => {\n        const isActive = step.key === currentStep;\n        const isPast = steps.findIndex(s => s.key === currentStep) > index;\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `progress-step ${isActive ? 'active' : ''} ${isPast ? 'past' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step-number\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step-label\",\n              children: step.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), index < steps.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `progress-line ${isPast ? 'past' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this)]\n        }, step.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ProgressBar","currentStep","steps","key","label","className","children","map","step","index","isActive","isPast","findIndex","s","Fragment","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/Users/kilianreichl/RBDev/rankboxd/src/components/ProgressBar.js"],"sourcesContent":["import React from 'react';\nimport './ProgressBar.css';\n\nconst ProgressBar = ({ currentStep }) => {\n  const steps = [\n    { key: 'input', label: 'Input List' },\n    { key: 'mode-selection', label: 'Select Mode' },\n    { key: 'ranking', label: 'Rank Movies' },\n    { key: 'results', label: 'Results' }\n  ];\n\n  return (\n    <div className=\"progress-navigation\">\n      <div className=\"progress-bar\">\n        {steps.map((step, index) => {\n          const isActive = step.key === currentStep;\n          const isPast = steps.findIndex(s => s.key === currentStep) > index;\n          \n          return (\n            <React.Fragment key={step.key}>\n              <div className={`progress-step ${isActive ? 'active' : ''} ${isPast ? 'past' : ''}`}>\n                <div className=\"step-number\">{index + 1}</div>\n                <div className=\"step-label\">{step.label}</div>\n              </div>\n              {index < steps.length - 1 && (\n                <div className={`progress-line ${isPast ? 'past' : ''}`} />\n              )}\n            </React.Fragment>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EACvC,MAAMC,KAAK,GAAG,CACZ;IAAEC,GAAG,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAa,CAAC,EACrC;IAAED,GAAG,EAAE,gBAAgB;IAAEC,KAAK,EAAE;EAAc,CAAC,EAC/C;IAAED,GAAG,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAc,CAAC,EACxC;IAAED,GAAG,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAU,CAAC,CACrC;EAED,oBACEL,OAAA;IAAKM,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAClCP,OAAA;MAAKM,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BJ,KAAK,CAACK,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QAC1B,MAAMC,QAAQ,GAAGF,IAAI,CAACL,GAAG,KAAKF,WAAW;QACzC,MAAMU,MAAM,GAAGT,KAAK,CAACU,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACV,GAAG,KAAKF,WAAW,CAAC,GAAGQ,KAAK;QAElE,oBACEV,OAAA,CAACF,KAAK,CAACiB,QAAQ;UAAAR,QAAA,gBACbP,OAAA;YAAKM,SAAS,EAAE,iBAAiBK,QAAQ,GAAG,QAAQ,GAAG,EAAE,IAAIC,MAAM,GAAG,MAAM,GAAG,EAAE,EAAG;YAAAL,QAAA,gBAClFP,OAAA;cAAKM,SAAS,EAAC,aAAa;cAAAC,QAAA,EAAEG,KAAK,GAAG;YAAC;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC9CnB,OAAA;cAAKM,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAEE,IAAI,CAACJ;YAAK;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C,CAAC,EACLT,KAAK,GAAGP,KAAK,CAACiB,MAAM,GAAG,CAAC,iBACvBpB,OAAA;YAAKM,SAAS,EAAE,iBAAiBM,MAAM,GAAG,MAAM,GAAG,EAAE;UAAG;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAC3D;QAAA,GAPkBV,IAAI,CAACL,GAAG;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQb,CAAC;MAErB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACE,EAAA,GA9BIpB,WAAW;AAgCjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}