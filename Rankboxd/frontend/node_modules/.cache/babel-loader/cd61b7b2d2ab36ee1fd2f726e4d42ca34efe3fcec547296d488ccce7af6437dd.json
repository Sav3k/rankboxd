{"ast":null,"code":"var _jsxFileName = \"/Users/kilianreichl/RBDev/rankboxd/src/components/MovieStatsPanel.js\";\nimport React from 'react';\nimport { AlertCircle, ArrowUp, BarChart2, Sigma } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STAT_TOOLTIPS = {\n  \"Win Rate\": \"The percentage of head-to-head comparisons this movie won. A higher win rate indicates this movie was consistently preferred over others.\",\n  \"Comparisons\": \"The total number of times this movie was compared against other movies. More comparisons generally lead to more accurate ranking.\",\n  \"Confidence\": \"Our statistical confidence in this movie's current ranking position, based on consistency of results and number of comparisons. Higher confidence means more reliable placement.\",\n  \"Relative Strength\": \"How well this movie performed against others ranked nearby (±5 positions). A high percentage indicates strong performance against similar-ranked movies.\"\n};\nconst getConfidenceLevel = score => {\n  if (score >= 0.8) return {\n    label: 'Very High',\n    color: 'text-primary'\n  };\n  if (score >= 0.6) return {\n    label: 'High',\n    color: 'text-primary/80'\n  };\n  if (score >= 0.4) return {\n    label: 'Moderate',\n    color: 'text-warning'\n  };\n  return {\n    label: 'Low',\n    color: 'text-error'\n  };\n};\nconst generateNarrative = stats => {\n  const winRate = (stats.wins / stats.comparisons * 100).toFixed(1);\n  const confidenceLevel = getConfidenceLevel(stats.confidence);\n  const recentWins = stats.recentResults.filter(r => r === 1).length;\n  const recentTotal = stats.recentResults.length;\n  const recentWinRate = (recentWins / recentTotal * 100).toFixed(1);\n  const dominancePhrase = stats.neighborPerformance.percentage >= 75 ? 'dominates against' : stats.neighborPerformance.percentage >= 60 ? 'performs well against' : stats.neighborPerformance.percentage >= 45 ? 'is competitive with' : stats.neighborPerformance.percentage >= 30 ? 'struggles against' : 'underperforms against';\n  return `This movie won ${winRate}% of its ${stats.comparisons} comparisons. ` + `Recently, it won ${recentWins} out of its last ${recentTotal} matchups (${recentWinRate}%). ` + `It ${dominancePhrase} similarly ranked movies, winning ${stats.neighborPerformance.percentage}% of nearby matchups. ` + `Based on these results, we have ${confidenceLevel.label.toLowerCase()} confidence in its current ranking.`;\n};\nconst StatBox = ({\n  label,\n  value,\n  icon: Icon,\n  detail = null,\n  valueColor = null\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"group relative bg-base-300/50 rounded-lg p-4 flex flex-col gap-1\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"absolute invisible group-hover:visible opacity-0 group-hover:opacity-100  bottom-full left-0 mb-2 px-4 py-3 bg-base-300  rounded-lg text-sm shadow-lg transition-all duration-200 z-10 w-[300px] -translate-x-1/4 text-center whitespace-normal leading-relaxed\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-0 left-1/2 -translate-x-1/2 translate-y-1/2  rotate-45 w-2 h-2 bg-base-300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), STAT_TOOLTIPS[label]]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center gap-2 text-base-content/70\",\n    children: [/*#__PURE__*/_jsxDEV(Icon, {\n      className: \"w-4 h-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-sm font-medium\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: `text-2xl font-bold ${valueColor || ''}`,\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), detail && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-sm text-base-content/60 mt-0.5\",\n      children: detail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 5\n}, this);\n_c = StatBox;\nconst MovieStatsPanel = ({\n  movie,\n  stats: {\n    rating,\n    wins,\n    losses,\n    comparisons,\n    recentResults,\n    confidence,\n    neighborPerformance\n  }\n}) => {\n  const winRate = (wins / comparisons * 100).toFixed(1);\n  const confidenceLevel = getConfidenceLevel(confidence);\n  const narrative = generateNarrative({\n    wins,\n    comparisons,\n    confidence,\n    recentResults,\n    neighborPerformance\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-6 px-4 bg-base-200/50 rounded-lg animate-[slideUp_0.3s_ease-out]\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 text-base-content/80 leading-relaxed\",\n      children: narrative\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 lg:grid-cols-4 gap-4 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(StatBox, {\n        label: \"Win Rate\",\n        value: `${winRate}%`,\n        icon: ArrowUp,\n        detail: `${wins} wins, ${losses} losses`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatBox, {\n        label: \"Comparisons\",\n        value: comparisons,\n        icon: Sigma\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatBox, {\n        label: \"Confidence\",\n        value: confidenceLevel.label,\n        icon: AlertCircle,\n        detail: `${(confidence * 100).toFixed(1)}%`,\n        valueColor: confidenceLevel.color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatBox, {\n        label: \"Relative Strength\",\n        value: `${neighborPerformance.percentage}%`,\n        icon: BarChart2,\n        detail: `vs nearby rankings`,\n        valueColor: neighborPerformance.percentage >= 50 ? 'text-success' : 'text-warning'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-sm font-medium text-base-content/70\",\n        children: \"Recent Matchups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-1\",\n        children: recentResults.map((result, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `h-1 flex-1 rounded-full ${result ? 'bg-success' : 'bg-error'}`,\n          title: result ? 'Won' : 'Lost'\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_c2 = MovieStatsPanel;\nexport default MovieStatsPanel;\nvar _c, _c2;\n$RefreshReg$(_c, \"StatBox\");\n$RefreshReg$(_c2, \"MovieStatsPanel\");","map":{"version":3,"names":["React","AlertCircle","ArrowUp","BarChart2","Sigma","jsxDEV","_jsxDEV","STAT_TOOLTIPS","getConfidenceLevel","score","label","color","generateNarrative","stats","winRate","wins","comparisons","toFixed","confidenceLevel","confidence","recentWins","recentResults","filter","r","length","recentTotal","recentWinRate","dominancePhrase","neighborPerformance","percentage","toLowerCase","StatBox","value","icon","Icon","detail","valueColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","MovieStatsPanel","movie","rating","losses","narrative","map","result","i","title","_c2","$RefreshReg$"],"sources":["/Users/kilianreichl/RBDev/rankboxd/src/components/MovieStatsPanel.js"],"sourcesContent":["import React from 'react';\nimport { AlertCircle, ArrowUp, BarChart2, Sigma } from 'lucide-react';\n\nconst STAT_TOOLTIPS = {\n    \"Win Rate\": \"The percentage of head-to-head comparisons this movie won. A higher win rate indicates this movie was consistently preferred over others.\",\n    \"Comparisons\": \"The total number of times this movie was compared against other movies. More comparisons generally lead to more accurate ranking.\",\n    \"Confidence\": \"Our statistical confidence in this movie's current ranking position, based on consistency of results and number of comparisons. Higher confidence means more reliable placement.\",\n    \"Relative Strength\": \"How well this movie performed against others ranked nearby (±5 positions). A high percentage indicates strong performance against similar-ranked movies.\"  };\n\nconst getConfidenceLevel = (score) => {\n    if (score >= 0.8) return { label: 'Very High', color: 'text-primary' };\n    if (score >= 0.6) return { label: 'High', color: 'text-primary/80' };\n    if (score >= 0.4) return { label: 'Moderate', color: 'text-warning' };\n    return { label: 'Low', color: 'text-error' };\n  };\n\n  const generateNarrative = (stats) => {\n    const winRate = (stats.wins / stats.comparisons * 100).toFixed(1);\n    const confidenceLevel = getConfidenceLevel(stats.confidence);\n    const recentWins = stats.recentResults.filter(r => r === 1).length;\n    const recentTotal = stats.recentResults.length;\n    const recentWinRate = (recentWins / recentTotal * 100).toFixed(1);\n    const dominancePhrase = stats.neighborPerformance.percentage >= 75 ? 'dominates against'\n      : stats.neighborPerformance.percentage >= 60 ? 'performs well against'\n      : stats.neighborPerformance.percentage >= 45 ? 'is competitive with'\n      : stats.neighborPerformance.percentage >= 30 ? 'struggles against'\n      : 'underperforms against';\n  \n    return (\n      `This movie won ${winRate}% of its ${stats.comparisons} comparisons. ` +\n      `Recently, it won ${recentWins} out of its last ${recentTotal} matchups (${recentWinRate}%). ` +\n      `It ${dominancePhrase} similarly ranked movies, winning ${stats.neighborPerformance.percentage}% of nearby matchups. ` +\n      `Based on these results, we have ${confidenceLevel.label.toLowerCase()} confidence in its current ranking.`\n    );\n  };\n\nconst StatBox = ({ label, value, icon: Icon, detail = null, valueColor = null }) => (\n    <div className=\"group relative bg-base-300/50 rounded-lg p-4 flex flex-col gap-1\">\n      <div className=\"absolute invisible group-hover:visible opacity-0 group-hover:opacity-100 \n                bottom-full left-0 mb-2 px-4 py-3 bg-base-300 \n                rounded-lg text-sm shadow-lg transition-all duration-200 z-10\n                w-[300px] -translate-x-1/4 text-center whitespace-normal leading-relaxed\">\n        <div className=\"absolute bottom-0 left-1/2 -translate-x-1/2 translate-y-1/2 \n                        rotate-45 w-2 h-2 bg-base-300\" />\n        {STAT_TOOLTIPS[label]}\n      </div>\n      \n      <div className=\"flex items-center gap-2 text-base-content/70\">\n        <Icon className=\"w-4 h-4\" />\n        <span className=\"text-sm font-medium\">{label}</span>\n      </div>\n      \n      <div className=\"flex flex-col\">\n        <span className={`text-2xl font-bold ${valueColor || ''}`}>{value}</span>\n        {detail && (\n          <span className=\"text-sm text-base-content/60 mt-0.5\">{detail}</span>\n        )}\n      </div>\n    </div>\n);\n  \nconst MovieStatsPanel = ({ \n  movie, \n  stats: { \n    rating, \n    wins, \n    losses, \n    comparisons, \n    recentResults,\n    confidence,\n    neighborPerformance\n  }\n}) => {\n  const winRate = ((wins / comparisons) * 100).toFixed(1);\n  const confidenceLevel = getConfidenceLevel(confidence);\n  const narrative = generateNarrative({ \n    wins, \n    comparisons, \n    confidence, \n    recentResults,\n    neighborPerformance \n  });\n\n  return (\n    <div className=\"py-6 px-4 bg-base-200/50 rounded-lg animate-[slideUp_0.3s_ease-out]\">\n      {/* Narrative Section */}\n      <div className=\"mb-6 text-base-content/80 leading-relaxed\">\n        {narrative}\n      </div>\n\n      {/* Stats Grid */}\n      <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\n        <StatBox \n            label=\"Win Rate\"\n            value={`${winRate}%`}\n            icon={ArrowUp}\n            detail={`${wins} wins, ${losses} losses`}\n        />\n        <StatBox \n            label=\"Comparisons\" \n            value={comparisons}\n            icon={Sigma}\n        />\n        <StatBox \n            label=\"Confidence\"\n            value={confidenceLevel.label}\n            icon={AlertCircle}\n            detail={`${(confidence * 100).toFixed(1)}%`}\n            valueColor={confidenceLevel.color}\n        />\n        <StatBox \n            label=\"Relative Strength\"     \n            value={`${neighborPerformance.percentage}%`}\n            icon={BarChart2}\n            detail={`vs nearby rankings`}\n            valueColor={neighborPerformance.percentage >= 50 ? 'text-success' : 'text-warning'}\n        />\n        </div>\n\n      {/* Recent Results Timeline */}\n      <div className=\"space-y-2\">\n        <h4 className=\"text-sm font-medium text-base-content/70\">Recent Matchups</h4>\n        <div className=\"flex gap-1\">\n          {recentResults.map((result, i) => (\n            <div \n              key={i}\n              className={`h-1 flex-1 rounded-full ${\n                result ? 'bg-success' : 'bg-error'\n              }`}\n              title={result ? 'Won' : 'Lost'}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieStatsPanel;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,OAAO,EAAEC,SAAS,EAAEC,KAAK,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,MAAMC,aAAa,GAAG;EAClB,UAAU,EAAE,2IAA2I;EACvJ,aAAa,EAAE,mIAAmI;EAClJ,YAAY,EAAE,kLAAkL;EAChM,mBAAmB,EAAE;AAA4J,CAAC;AAEtL,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;EAClC,IAAIA,KAAK,IAAI,GAAG,EAAE,OAAO;IAAEC,KAAK,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAe,CAAC;EACtE,IAAIF,KAAK,IAAI,GAAG,EAAE,OAAO;IAAEC,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAkB,CAAC;EACpE,IAAIF,KAAK,IAAI,GAAG,EAAE,OAAO;IAAEC,KAAK,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAe,CAAC;EACrE,OAAO;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAa,CAAC;AAC9C,CAAC;AAED,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;EACnC,MAAMC,OAAO,GAAG,CAACD,KAAK,CAACE,IAAI,GAAGF,KAAK,CAACG,WAAW,GAAG,GAAG,EAAEC,OAAO,CAAC,CAAC,CAAC;EACjE,MAAMC,eAAe,GAAGV,kBAAkB,CAACK,KAAK,CAACM,UAAU,CAAC;EAC5D,MAAMC,UAAU,GAAGP,KAAK,CAACQ,aAAa,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAK,CAAC,CAAC,CAACC,MAAM;EAClE,MAAMC,WAAW,GAAGZ,KAAK,CAACQ,aAAa,CAACG,MAAM;EAC9C,MAAME,aAAa,GAAG,CAACN,UAAU,GAAGK,WAAW,GAAG,GAAG,EAAER,OAAO,CAAC,CAAC,CAAC;EACjE,MAAMU,eAAe,GAAGd,KAAK,CAACe,mBAAmB,CAACC,UAAU,IAAI,EAAE,GAAG,mBAAmB,GACpFhB,KAAK,CAACe,mBAAmB,CAACC,UAAU,IAAI,EAAE,GAAG,uBAAuB,GACpEhB,KAAK,CAACe,mBAAmB,CAACC,UAAU,IAAI,EAAE,GAAG,qBAAqB,GAClEhB,KAAK,CAACe,mBAAmB,CAACC,UAAU,IAAI,EAAE,GAAG,mBAAmB,GAChE,uBAAuB;EAE3B,OACE,kBAAkBf,OAAO,YAAYD,KAAK,CAACG,WAAW,gBAAgB,GACtE,oBAAoBI,UAAU,oBAAoBK,WAAW,cAAcC,aAAa,MAAM,GAC9F,MAAMC,eAAe,qCAAqCd,KAAK,CAACe,mBAAmB,CAACC,UAAU,wBAAwB,GACtH,mCAAmCX,eAAe,CAACR,KAAK,CAACoB,WAAW,CAAC,CAAC,qCAAqC;AAE/G,CAAC;AAEH,MAAMC,OAAO,GAAGA,CAAC;EAAErB,KAAK;EAAEsB,KAAK;EAAEC,IAAI,EAAEC,IAAI;EAAEC,MAAM,GAAG,IAAI;EAAEC,UAAU,GAAG;AAAK,CAAC,kBAC3E9B,OAAA;EAAK+B,SAAS,EAAC,kEAAkE;EAAAC,QAAA,gBAC/EhC,OAAA;IAAK+B,SAAS,EAAC,iQAGoE;IAAAC,QAAA,gBACjFhC,OAAA;MAAK+B,SAAS,EAAC;IAC+B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAChDnC,aAAa,CAACG,KAAK,CAAC;EAAA;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC,eAENpC,OAAA;IAAK+B,SAAS,EAAC,8CAA8C;IAAAC,QAAA,gBAC3DhC,OAAA,CAAC4B,IAAI;MAACG,SAAS,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5BpC,OAAA;MAAM+B,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAAE5B;IAAK;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC,eAENpC,OAAA;IAAK+B,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BhC,OAAA;MAAM+B,SAAS,EAAE,sBAAsBD,UAAU,IAAI,EAAE,EAAG;MAAAE,QAAA,EAAEN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EACxEP,MAAM,iBACL7B,OAAA;MAAM+B,SAAS,EAAC,qCAAqC;MAAAC,QAAA,EAAEH;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CACrE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACH,CACR;AAACC,EAAA,GAvBIZ,OAAO;AAyBb,MAAMa,eAAe,GAAGA,CAAC;EACvBC,KAAK;EACLhC,KAAK,EAAE;IACLiC,MAAM;IACN/B,IAAI;IACJgC,MAAM;IACN/B,WAAW;IACXK,aAAa;IACbF,UAAU;IACVS;EACF;AACF,CAAC,KAAK;EACJ,MAAMd,OAAO,GAAG,CAAEC,IAAI,GAAGC,WAAW,GAAI,GAAG,EAAEC,OAAO,CAAC,CAAC,CAAC;EACvD,MAAMC,eAAe,GAAGV,kBAAkB,CAACW,UAAU,CAAC;EACtD,MAAM6B,SAAS,GAAGpC,iBAAiB,CAAC;IAClCG,IAAI;IACJC,WAAW;IACXG,UAAU;IACVE,aAAa;IACbO;EACF,CAAC,CAAC;EAEF,oBACEtB,OAAA;IAAK+B,SAAS,EAAC,qEAAqE;IAAAC,QAAA,gBAElFhC,OAAA;MAAK+B,SAAS,EAAC,2CAA2C;MAAAC,QAAA,EACvDU;IAAS;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eAGNpC,OAAA;MAAK+B,SAAS,EAAC,4CAA4C;MAAAC,QAAA,gBACzDhC,OAAA,CAACyB,OAAO;QACJrB,KAAK,EAAC,UAAU;QAChBsB,KAAK,EAAE,GAAGlB,OAAO,GAAI;QACrBmB,IAAI,EAAE/B,OAAQ;QACdiC,MAAM,EAAE,GAAGpB,IAAI,UAAUgC,MAAM;MAAU;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACFpC,OAAA,CAACyB,OAAO;QACJrB,KAAK,EAAC,aAAa;QACnBsB,KAAK,EAAEhB,WAAY;QACnBiB,IAAI,EAAE7B;MAAM;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,eACFpC,OAAA,CAACyB,OAAO;QACJrB,KAAK,EAAC,YAAY;QAClBsB,KAAK,EAAEd,eAAe,CAACR,KAAM;QAC7BuB,IAAI,EAAEhC,WAAY;QAClBkC,MAAM,EAAE,GAAG,CAAChB,UAAU,GAAG,GAAG,EAAEF,OAAO,CAAC,CAAC,CAAC,GAAI;QAC5CmB,UAAU,EAAElB,eAAe,CAACP;MAAM;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACFpC,OAAA,CAACyB,OAAO;QACJrB,KAAK,EAAC,mBAAmB;QACzBsB,KAAK,EAAE,GAAGJ,mBAAmB,CAACC,UAAU,GAAI;QAC5CI,IAAI,EAAE9B,SAAU;QAChBgC,MAAM,EAAE,oBAAqB;QAC7BC,UAAU,EAAER,mBAAmB,CAACC,UAAU,IAAI,EAAE,GAAG,cAAc,GAAG;MAAe;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eAGRpC,OAAA;MAAK+B,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBhC,OAAA;QAAI+B,SAAS,EAAC,0CAA0C;QAAAC,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7EpC,OAAA;QAAK+B,SAAS,EAAC,YAAY;QAAAC,QAAA,EACxBjB,aAAa,CAAC4B,GAAG,CAAC,CAACC,MAAM,EAAEC,CAAC,kBAC3B7C,OAAA;UAEE+B,SAAS,EAAE,2BACTa,MAAM,GAAG,YAAY,GAAG,UAAU,EACjC;UACHE,KAAK,EAAEF,MAAM,GAAG,KAAK,GAAG;QAAO,GAJ1BC,CAAC;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKP,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACW,GAAA,GA3EIT,eAAe;AA6ErB,eAAeA,eAAe;AAAC,IAAAD,EAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}