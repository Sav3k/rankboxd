{"ast":null,"code":"var _jsxFileName = \"/Users/kilianreichl/RBDev/rankboxd/src/components/InputForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { CheckCircle, XCircle, Link as LinkIcon, ArrowRight } from 'lucide-react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction InputForm({\n  onSubmit\n}) {\n  _s();\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [validationState, setValidationState] = useState('initial'); // 'initial', 'valid', 'invalid'\n  const [errorMessage, setErrorMessage] = useState('');\n  const isValidUrl = string => {\n    try {\n      const url = new URL(string);\n      return url.protocol === 'http:' || url.protocol === 'https:';\n    } catch (_) {\n      return false;\n    }\n  };\n  const isValidLetterboxdUrl = url => {\n    // Basic check for letterboxd.com domain\n    if (!url.includes('letterboxd.com/')) return false;\n\n    // Check for valid structure: letterboxd.com/username and letterboxd.com/username/list/listname\n    // But reject letterboxd.com/username/lists\n    if (url.includes('/lists')) return false;\n    const pattern = /^https?:\\/\\/(www\\.)?letterboxd\\.com\\/[^\\/]+\\/?$/;\n    const patternWithList = /^https?:\\/\\/(www\\.)?letterboxd\\.com\\/[^\\/]+\\/list(\\/.*)?$/;\n    return pattern.test(url) || patternWithList.test(url);\n  };\n  const validateInput = useCallback(value => {\n    // Empty or whitespace-only input should be initial state\n    if (!value || !value.trim()) {\n      setValidationState('initial');\n      setErrorMessage('');\n      return;\n    }\n\n    // Keep in initial state while typing the base Letterboxd URL\n    if (value.startsWith('https://letterboxd.com') || value.startsWith('http://letterboxd.com')) {\n      if (value === 'https://letterboxd.com' || value === 'https://letterboxd.com/' || value === 'http://letterboxd.com' || value === 'http://letterboxd.com/') {\n        setValidationState('initial');\n        setErrorMessage('');\n        return;\n      }\n    }\n\n    // For all other cases, validate the URL\n    if (!isValidUrl(value)) {\n      setValidationState('invalid');\n      setErrorMessage('Please enter a valid URL');\n    } else if (!isValidLetterboxdUrl(value)) {\n      setValidationState('invalid');\n      setErrorMessage('Please enter a valid Letterboxd list URL');\n    } else {\n      setValidationState('valid');\n      setErrorMessage('');\n    }\n  }, []);\n  useEffect(() => {\n    // Don't validate if input is empty\n    if (!input.trim()) {\n      setValidationState('initial');\n      setErrorMessage('');\n      return;\n    }\n    const timeoutId = setTimeout(() => validateInput(input.trim()), 300);\n    return () => clearTimeout(timeoutId);\n  }, [input, validateInput]);\n  const handleFetchMovies = async () => {\n    setLoading(true);\n    setErrorMessage('');\n    try {\n      const response = await fetch(`http://localhost:3001/fetch-movies?url=${encodeURIComponent(input)}`);\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to fetch movies');\n      }\n      const {\n        data: {\n          movies\n        }\n      } = data;\n      if (!(movies !== null && movies !== void 0 && movies.length)) {\n        throw new Error('No movies found in the provided URL');\n      }\n      if (movies.length < 2) {\n        throw new Error('Please enter a link with at least 2 movies');\n      }\n      onSubmit(movies);\n    } catch (error) {\n      console.error(\"Error fetching movies:\", error);\n      setErrorMessage(error.message || \"Failed to fetch movies. Please check the URL and try again.\");\n      setValidationState('invalid');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!input) {\n      setErrorMessage(\"Please enter a URL.\");\n      setValidationState('invalid');\n      return;\n    }\n    if (!isValidUrl(input)) {\n      setErrorMessage(\"Please enter a valid URL.\");\n      setValidationState('invalid');\n      return;\n    }\n    handleFetchMovies();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto p-6 card bg-base-200 shadow-xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-6 text-center\",\n      children: \"Import Your Movie List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8 text-sm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert bg-primary/10 text-primary-content shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(LinkIcon, {\n          className: \"w-5 h-5 text-accent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-base-content/80\",\n          children: \"Copy and paste a Letterboxd list URL to get started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label-text\",\n            children: \"Letterboxd List URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: input,\n            onChange: e => {\n              setValidationState('initial'); // Reset validation state on each change\n              setInput(e.target.value);\n            },\n            onPaste: e => {\n              e.preventDefault();\n              const pastedText = e.clipboardData.getData('text');\n              const cleanUrl = pastedText.trim();\n              if (isValidLetterboxdUrl(cleanUrl)) {\n                setInput(cleanUrl);\n                setTimeout(() => validateInput(cleanUrl), 0);\n              } else {\n                setValidationState('invalid');\n                setErrorMessage('Please paste a valid Letterboxd list URL');\n              }\n            },\n            placeholder: \"https://letterboxd.com/username/list/...\",\n            className: `input input-bordered w-full pr-20 ${validationState === 'valid' ? 'input-success border-primary/50' : validationState === 'invalid' ? 'input-error border-error/50' : ''}`,\n            disabled: loading,\n            autoComplete: \"off\",\n            autoCorrect: \"off\",\n            autoCapitalize: \"none\",\n            spellCheck: \"false\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute inset-y-0 right-3 flex items-center gap-2\",\n            children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n              children: validationState === 'valid' ? /*#__PURE__*/_jsxDEV(motion.img, {\n                initial: {\n                  opacity: 0,\n                  scale: 0.5\n                },\n                animate: {\n                  opacity: 1,\n                  scale: 1\n                },\n                exit: {\n                  opacity: 0,\n                  scale: 0.5\n                },\n                className: \"w-6 h-6 rounded-sm\",\n                src: \"https://a.ltrbxd.com/logos/letterboxd-mac-icon.png\",\n                alt: \"Letterboxd\",\n                onError: e => e.target.style.display = 'none'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this) : validationState === 'invalid' ? /*#__PURE__*/_jsxDEV(XCircle, {\n                className: \"w-5 h-5 text-error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this) : /*#__PURE__*/_jsxDEV(LinkIcon, {\n                className: \"w-5 h-5 text-base-content opacity-30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label-text-alt text-error\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading || validationState !== 'valid',\n          className: `btn btn-wide gap-2 hover:brightness-110 transition-all\n            ${validationState === 'valid' ? 'btn-primary' : 'btn-disabled'}`,\n          children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loading loading-spinner loading-sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), \"Fetching Movies...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"Start Ranking\", /*#__PURE__*/_jsxDEV(ArrowRight, {\n              className: `w-4 h-4 ${validationState === 'valid' ? 'text-primary-content' : 'text-accent'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divider mt-8\",\n      children: \"How It Works\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-4 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card bg-base-300 p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-bold mb-2\",\n          children: \"1. Import\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-base-content/70\",\n          children: \"Paste your Letterboxd list URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card bg-base-300 p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-bold mb-2\",\n          children: \"2. Compare\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-base-content/70\",\n          children: \"Choose between pairs of movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card bg-base-300 p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-bold mb-2\",\n          children: \"3. Rank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-base-content/70\",\n          children: \"Get your personalized ranking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(InputForm, \"b4dYtaF+lgfWi66KiXlLsGs4j10=\");\n_c = InputForm;\nexport default InputForm;\nvar _c;\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","CheckCircle","XCircle","Link","LinkIcon","ArrowRight","motion","AnimatePresence","jsxDEV","_jsxDEV","Fragment","_Fragment","InputForm","onSubmit","_s","input","setInput","loading","setLoading","validationState","setValidationState","errorMessage","setErrorMessage","isValidUrl","string","url","URL","protocol","_","isValidLetterboxdUrl","includes","pattern","patternWithList","test","validateInput","value","trim","startsWith","timeoutId","setTimeout","clearTimeout","handleFetchMovies","response","fetch","encodeURIComponent","data","json","ok","Error","message","movies","length","error","console","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","onPaste","pastedText","clipboardData","getData","cleanUrl","placeholder","disabled","autoComplete","autoCorrect","autoCapitalize","spellCheck","img","initial","opacity","scale","animate","exit","src","alt","onError","style","display","_c","$RefreshReg$"],"sources":["/Users/kilianreichl/RBDev/rankboxd/src/components/InputForm.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { CheckCircle, XCircle, Link as LinkIcon, ArrowRight } from 'lucide-react';\nimport { motion, AnimatePresence } from 'framer-motion'; \n\nfunction InputForm({ onSubmit }) {\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [validationState, setValidationState] = useState('initial'); // 'initial', 'valid', 'invalid'\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const isValidUrl = (string) => {\n    try {\n      const url = new URL(string);\n      return url.protocol === 'http:' || url.protocol === 'https:';\n    } catch (_) {\n      return false;\n    }\n  };\n\n  const isValidLetterboxdUrl = (url) => {\n    // Basic check for letterboxd.com domain\n    if (!url.includes('letterboxd.com/')) return false;\n    \n    // Check for valid structure: letterboxd.com/username and letterboxd.com/username/list/listname\n    // But reject letterboxd.com/username/lists\n    if (url.includes('/lists')) return false;\n    \n    const pattern = /^https?:\\/\\/(www\\.)?letterboxd\\.com\\/[^\\/]+\\/?$/;\n    const patternWithList = /^https?:\\/\\/(www\\.)?letterboxd\\.com\\/[^\\/]+\\/list(\\/.*)?$/;\n    \n    return pattern.test(url) || patternWithList.test(url);\n  };\n\n  const validateInput = useCallback((value) => {\n    // Empty or whitespace-only input should be initial state\n    if (!value || !value.trim()) {\n      setValidationState('initial');\n      setErrorMessage('');\n      return;\n    }\n  \n    // Keep in initial state while typing the base Letterboxd URL\n    if (value.startsWith('https://letterboxd.com') || value.startsWith('http://letterboxd.com')) {\n      if (value === 'https://letterboxd.com' || value === 'https://letterboxd.com/' ||\n          value === 'http://letterboxd.com' || value === 'http://letterboxd.com/') {\n        setValidationState('initial');\n        setErrorMessage('');\n        return;\n      }\n    }\n  \n    // For all other cases, validate the URL\n    if (!isValidUrl(value)) {\n      setValidationState('invalid');\n      setErrorMessage('Please enter a valid URL');\n    } else if (!isValidLetterboxdUrl(value)) {\n      setValidationState('invalid');\n      setErrorMessage('Please enter a valid Letterboxd list URL');\n    } else {\n      setValidationState('valid');\n      setErrorMessage('');\n    }\n  }, []);\n\n  useEffect(() => {\n    // Don't validate if input is empty\n    if (!input.trim()) {\n      setValidationState('initial');\n      setErrorMessage('');\n      return;\n    }\n  \n    const timeoutId = setTimeout(() => validateInput(input.trim()), 300);\n    return () => clearTimeout(timeoutId);\n  }, [input, validateInput]);\n\n  const handleFetchMovies = async () => {\n    setLoading(true);\n    setErrorMessage('');\n    try {\n      const response = await fetch(`http://localhost:3001/fetch-movies?url=${encodeURIComponent(input)}`);\n      const data = await response.json();\n  \n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to fetch movies');\n      }\n  \n      const { data: { movies } } = data;\n        \n      if (!movies?.length) {\n        throw new Error('No movies found in the provided URL');\n      }\n      if (movies.length < 2) {\n        throw new Error('Please enter a link with at least 2 movies');\n      }\n      onSubmit(movies);\n    } catch (error) {\n      console.error(\"Error fetching movies:\", error);\n      setErrorMessage(error.message || \"Failed to fetch movies. Please check the URL and try again.\");\n      setValidationState('invalid');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!input) {\n      setErrorMessage(\"Please enter a URL.\");\n      setValidationState('invalid');\n      return;\n    }\n    if (!isValidUrl(input)) {\n      setErrorMessage(\"Please enter a valid URL.\");\n      setValidationState('invalid');\n      return;\n    }\n    handleFetchMovies();\n  };\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-6 card bg-base-200 shadow-xl\">\n      <h2 className=\"text-2xl font-bold mb-6 text-center\">Import Your Movie List</h2>\n      \n      <div className=\"mb-8 text-sm\">\n      <div className=\"alert bg-primary/10 text-primary-content shadow-lg\">\n        <LinkIcon className=\"w-5 h-5 text-accent\" />\n        <span className=\"text-base-content/80\">\n          Copy and paste a Letterboxd list URL to get started\n        </span>\n      </div>\n      </div>\n\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\n      <div className=\"form-control w-full\">\n        <label className=\"label\">\n          <span className=\"label-text\">Letterboxd List URL</span>\n        </label>\n        <div className=\"relative\">\n          <input\n            type=\"text\"\n            value={input}\n            onChange={(e) => {\n              setValidationState('initial'); // Reset validation state on each change\n              setInput(e.target.value);\n            }}\n            onPaste={(e) => {\n              e.preventDefault();\n              const pastedText = e.clipboardData.getData('text');\n              const cleanUrl = pastedText.trim();\n              \n              if (isValidLetterboxdUrl(cleanUrl)) {\n                setInput(cleanUrl);\n                setTimeout(() => validateInput(cleanUrl), 0);\n              } else {\n                setValidationState('invalid');\n                setErrorMessage('Please paste a valid Letterboxd list URL');\n              }\n            }}\n            placeholder=\"https://letterboxd.com/username/list/...\"\n            className={`input input-bordered w-full pr-20 ${\n              validationState === 'valid' ? 'input-success border-primary/50' : \n              validationState === 'invalid' ? 'input-error border-error/50' : ''\n            }`}\n            disabled={loading}\n            autoComplete=\"off\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            spellCheck=\"false\"\n          />\n          <div className=\"absolute inset-y-0 right-3 flex items-center gap-2\">\n            <AnimatePresence>\n              {validationState === 'valid' ? (\n                <motion.img\n                  initial={{ opacity: 0, scale: 0.5 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  exit={{ opacity: 0, scale: 0.5 }}\n                  className=\"w-6 h-6 rounded-sm\"\n                  src=\"https://a.ltrbxd.com/logos/letterboxd-mac-icon.png\"\n                  alt=\"Letterboxd\"\n                  onError={(e) => e.target.style.display = 'none'}\n                />\n              ) : validationState === 'invalid' ? (\n                <XCircle className=\"w-5 h-5 text-error\" />\n              ) : (\n                <LinkIcon className=\"w-5 h-5 text-base-content opacity-30\" />\n              )}\n            </AnimatePresence>\n          </div>\n        </div>\n        {errorMessage && (\n          <label className=\"label\">\n            <span className=\"label-text-alt text-error\">{errorMessage}</span>\n          </label>\n        )}\n      </div>\n\n        <div className=\"text-center\">\n        <button \n          type=\"submit\" \n          disabled={loading || validationState !== 'valid'}\n          className={`btn btn-wide gap-2 hover:brightness-110 transition-all\n            ${validationState === 'valid' ? 'btn-primary' : 'btn-disabled'}`}\n        >\n          {loading ? (\n            <>\n              <span className=\"loading loading-spinner loading-sm\"></span>\n              Fetching Movies...\n            </>\n          ) : (\n            <>\n              Start Ranking\n              <ArrowRight className={`w-4 h-4 ${validationState === 'valid' ? 'text-primary-content' : 'text-accent'}`} />\n            </>\n          )}\n        </button>\n        </div>\n      </form>\n\n      <div className=\"divider mt-8\">How It Works</div>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-center\">\n        <div className=\"card bg-base-300 p-4\">\n          <h3 className=\"font-bold mb-2\">1. Import</h3>\n          <p className=\"text-sm text-base-content/70\">Paste your Letterboxd list URL</p>\n        </div>\n        <div className=\"card bg-base-300 p-4\">\n          <h3 className=\"font-bold mb-2\">2. Compare</h3>\n          <p className=\"text-sm text-base-content/70\">Choose between pairs of movies</p>\n        </div>\n        <div className=\"card bg-base-300 p-4\">\n          <h3 className=\"font-bold mb-2\">3. Rank</h3>\n          <p className=\"text-sm text-base-content/70\">Get your personalized ranking</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default InputForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}