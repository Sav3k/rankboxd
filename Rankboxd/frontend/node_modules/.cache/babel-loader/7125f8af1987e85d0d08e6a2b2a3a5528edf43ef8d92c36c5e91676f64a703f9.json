{"ast":null,"code":"var _jsxFileName = \"/Users/kilianreichl/RBDev/rankboxd/src/components/ModeSelection.js\",\n  _s = $RefreshSig$();\n// Replace the entire content of ModeSelection.js\nimport React, { useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RANKING_CONSTANTS = {\n  QUICK_MULTIPLIER: 1.5,\n  BALANCED_MULTIPLIER: 3,\n  THOROUGH_MULTIPLIER: 5,\n  MIN_QUICK_COMPARISONS: 20,\n  MIN_BALANCED_COMPARISONS: 30,\n  MIN_THOROUGH_COMPARISONS: 40,\n  MAX_BALANCED_COMPARISONS: 1500,\n  MAX_THOROUGH_COMPARISONS: 2000\n};\nconst ModeSelection = ({\n  movies,\n  onModeSelect\n}) => {\n  _s();\n  const modeOptions = useMemo(() => {\n    const calculateOptions = movieCount => {\n      // Quick mode - less accurate but faster\n      const quickComparisons = Math.max(Math.ceil(movieCount * RANKING_CONSTANTS.QUICK_MULTIPLIER), RANKING_CONSTANTS.MIN_QUICK_COMPARISONS);\n\n      // Balanced mode - good balance between accuracy and time\n      const baseComparisons = movieCount * RANKING_CONSTANTS.BALANCED_MULTIPLIER;\n      const extraComparisons = Math.ceil(movieCount * Math.log2(movieCount));\n      const balancedComparisons = Math.min(Math.max(baseComparisons + extraComparisons, RANKING_CONSTANTS.MIN_BALANCED_COMPARISONS), RANKING_CONSTANTS.MAX_BALANCED_COMPARISONS);\n\n      // Thorough mode - highest accuracy\n      const thoroughComparisons = Math.min(Math.max(movieCount * RANKING_CONSTANTS.THOROUGH_MULTIPLIER + extraComparisons, RANKING_CONSTANTS.MIN_THOROUGH_COMPARISONS), RANKING_CONSTANTS.MAX_THOROUGH_COMPARISONS);\n      return {\n        quick: quickComparisons,\n        balanced: balancedComparisons,\n        thorough: thoroughComparisons\n      };\n    };\n    return calculateOptions(movies.length);\n  }, [movies.length]);\n  const getEstimatedTime = comparisons => Math.ceil(comparisons * 0.1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mode-selection\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Choose Ranking Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mode-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onModeSelect('quick', modeOptions.quick),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Quick Ranking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"About \", modeOptions.quick, \" comparisons\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Lower accuracy, faster completion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Estimated time: \", getEstimatedTime(modeOptions.quick), \" minutes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onModeSelect('balanced', modeOptions.balanced),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Balanced Ranking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"About \", modeOptions.balanced, \" comparisons\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Good balance of accuracy and time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Estimated time: \", getEstimatedTime(modeOptions.balanced), \" minutes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onModeSelect('thorough', modeOptions.thorough),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Thorough Ranking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"About \", modeOptions.thorough, \" comparisons\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Highest accuracy, takes longer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Estimated time: \", getEstimatedTime(modeOptions.thorough), \" minutes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ModeSelection, \"MTAhMGtS++Lz8WQOr97j+AptYgE=\");\n_c = ModeSelection;\nexport default ModeSelection;\nvar _c;\n$RefreshReg$(_c, \"ModeSelection\");","map":{"version":3,"names":["React","useMemo","jsxDEV","_jsxDEV","RANKING_CONSTANTS","QUICK_MULTIPLIER","BALANCED_MULTIPLIER","THOROUGH_MULTIPLIER","MIN_QUICK_COMPARISONS","MIN_BALANCED_COMPARISONS","MIN_THOROUGH_COMPARISONS","MAX_BALANCED_COMPARISONS","MAX_THOROUGH_COMPARISONS","ModeSelection","movies","onModeSelect","_s","modeOptions","calculateOptions","movieCount","quickComparisons","Math","max","ceil","baseComparisons","extraComparisons","log2","balancedComparisons","min","thoroughComparisons","quick","balanced","thorough","length","getEstimatedTime","comparisons","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/kilianreichl/RBDev/rankboxd/src/components/ModeSelection.js"],"sourcesContent":["// Replace the entire content of ModeSelection.js\nimport React, { useMemo } from 'react';\n\nconst RANKING_CONSTANTS = {\n  QUICK_MULTIPLIER: 1.5,\n  BALANCED_MULTIPLIER: 3,\n  THOROUGH_MULTIPLIER: 5,\n  MIN_QUICK_COMPARISONS: 20,\n  MIN_BALANCED_COMPARISONS: 30,\n  MIN_THOROUGH_COMPARISONS: 40,\n  MAX_BALANCED_COMPARISONS: 1500,\n  MAX_THOROUGH_COMPARISONS: 2000\n};\n\nconst ModeSelection = ({ movies, onModeSelect }) => {\n  const modeOptions = useMemo(() => {\n    const calculateOptions = (movieCount) => {\n      // Quick mode - less accurate but faster\n      const quickComparisons = Math.max(\n        Math.ceil(movieCount * RANKING_CONSTANTS.QUICK_MULTIPLIER),\n        RANKING_CONSTANTS.MIN_QUICK_COMPARISONS\n      );\n      \n      // Balanced mode - good balance between accuracy and time\n      const baseComparisons = movieCount * RANKING_CONSTANTS.BALANCED_MULTIPLIER;\n      const extraComparisons = Math.ceil(movieCount * Math.log2(movieCount));\n      const balancedComparisons = Math.min(\n        Math.max(baseComparisons + extraComparisons, RANKING_CONSTANTS.MIN_BALANCED_COMPARISONS),\n        RANKING_CONSTANTS.MAX_BALANCED_COMPARISONS\n      );\n      \n      // Thorough mode - highest accuracy\n      const thoroughComparisons = Math.min(\n        Math.max(movieCount * RANKING_CONSTANTS.THOROUGH_MULTIPLIER + extraComparisons, RANKING_CONSTANTS.MIN_THOROUGH_COMPARISONS),\n        RANKING_CONSTANTS.MAX_THOROUGH_COMPARISONS\n      );\n\n      return {\n        quick: quickComparisons,\n        balanced: balancedComparisons,\n        thorough: thoroughComparisons\n      };\n    };\n\n    return calculateOptions(movies.length);\n  }, [movies.length]);\n\n  const getEstimatedTime = (comparisons) => Math.ceil(comparisons * 0.1);\n\n  return (\n    <div className=\"mode-selection\">\n      <h2>Choose Ranking Mode</h2>\n      <div className=\"mode-buttons\">\n        <button onClick={() => onModeSelect('quick', modeOptions.quick)}>\n          <h3>Quick Ranking</h3>\n          <p>About {modeOptions.quick} comparisons</p>\n          <p>Lower accuracy, faster completion</p>\n          <p>Estimated time: {getEstimatedTime(modeOptions.quick)} minutes</p>\n        </button>\n        <button onClick={() => onModeSelect('balanced', modeOptions.balanced)}>\n          <h3>Balanced Ranking</h3>\n          <p>About {modeOptions.balanced} comparisons</p>\n          <p>Good balance of accuracy and time</p>\n          <p>Estimated time: {getEstimatedTime(modeOptions.balanced)} minutes</p>\n        </button>\n        <button onClick={() => onModeSelect('thorough', modeOptions.thorough)}>\n          <h3>Thorough Ranking</h3>\n          <p>About {modeOptions.thorough} comparisons</p>\n          <p>Highest accuracy, takes longer</p>\n          <p>Estimated time: {getEstimatedTime(modeOptions.thorough)} minutes</p>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ModeSelection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}